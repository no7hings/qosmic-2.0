#usda 1.0
(
    defaultPrim = ""
    doc = """
    """
    metersPerUnit = 0.01
    upAxis = "Y"
)

def ArnoldOptions "options"
{
    int arnold:AA_samples = 3
    string arnold:camera = "/persp/perspShape"
    string arnold:color_manager = "defaultColorMgtGlobals"
    float arnold:frame = 1
    int arnold:GI_diffuse_depth = 1
    int arnold:GI_specular_depth = 1
    int arnold:GI_transmission_depth = 8
    string arnold:name = "options"
    string[] arnold:outputs = ["RGBA RGBA defaultArnoldFilter/gaussian_filter defaultArnoldDriver/driver_exr.RGBA"]
    string arnold:procedural_searchpath = "/l/prod/cgm/work/assets/chr/nn_4y/srf/surfacing/maya/"
    bool arnold:texture_automip = 0
    bool arnold:texture_per_file_stats = 1
    string arnold:texture_searchpath = "/l/prod/cgm/work/assets/chr/nn_4y/srf/surfacing/maya/sourceimages"
    int arnold:threads = 12
    int arnold:xres = 1024
    int arnold:yres = 1024
    string primvars:render_layer = "defaultRenderLayer" (
        elementSize = 1
        interpolation = "constant"
    )
}

def "defaultArnoldFilter"
{
    def ArnoldGaussianFilter "gaussian_filter"
    {
        string arnold:name = "defaultArnoldFilter/gaussian_filter"
    }
}

def "defaultArnoldDriver"
{
    def ArnoldDriverExr "driver_exr_RGBA"
    {
        string arnold:color_space = ""
        string arnold:filename = "/temp/test.exr"
        string arnold:name = "defaultArnoldDriver/driver_exr.RGBA"
    }
}

def ArnoldColorManagerOcio "defaultColorMgtGlobals"
{
    string arnold:color_space_linear = "ACES - ACEScg"
    string arnold:config = "/job/PLE/bundle/thirdparty/aces/1.2/config.ocio"
    string arnold:name = "defaultColorMgtGlobals"
}