option:
    root: '/rootNode'
    category: 'workspace'
    type: 'user_quality_space'
    type_abr: 'usr_qlt_spc'
    create_type: 'QualitySpace_Wsp_Usr'
    description:
        |-
        User Quality Space
        - include all quality per variant
    variant_key: 'quality'
    #
    auto_color: False
    #
    size:
        w_s: 240
        h_s: 80
        #
        w: 1200
        h: 480
    #
    position:
        x_start: =-<option.size.w>/2-<option.size.w_s>/2
        y_start: =<option.size.h>/2+<option.size.h_s>
#
main:
    type: QualitySpace_Wsp
    name: '<option.type>'
    path: '<option.root>/<.name>'
    input: '<.path>.join_upstream'
    output: '<.path>.output'
    #
    clear_ports: False
    clear_children: False
    force_update: True
    #
    attributes:
        comment: '<option.description>'
    #
    parameters:
        type: '<option.create_type>'
#
record_update:
    backdrop:
        attributes:
            ns_text: '<option.description>'
#
node_add:
    #
    custom__quality:
        index_x: 1
        tag: 'QLT'
        variant:
            |-
            <..key % str(x).split('__')[0]>
        type: Quality_Wsp
        name: '<.variant>__<.tag>'
        path: '<main.path>/<.name>'
        input: '<.path>.join_upstream'
        output: '<.path>.output'
        #
        attributes:
            x: =<option.position.x_start>+<option.size.w_s>*<..index_x>
            y: =<option.position.y_start>
        #
        parameters:
            parameters/scheme: 'custom'
        #
        force_connections:
            - '{upstream_merge}.out'
            - '<.input>'
            #
            - '<.output>'
            - '{variant_register}.<.variant>'
    #
    low__quality:
        index_x: 2
        tag: 'QLT'
        variant:
            |-
            <..key % str(x).split('__')[0]>
        type: Quality_Wsp
        name: '<.variant>__<.tag>'
        path: '<main.path>/<.name>'
        input: '<.path>.join_upstream'
        output: '<.path>.output'
        #
        attributes:
            x: =<option.position.x_start>+<option.size.w_s>*<..index_x>
            y: =<option.position.y_start>
        #
        parameters:
            parameters/scheme: 'low'
        #
        force_connections:
            - '{upstream_merge}.out'
            - '<.input>'
            #
            - '<.output>'
            - '{variant_register}.<.variant>'
    #
    medium__quality:
        index_x: 3
        tag: 'QLT'
        variant:
            |-
            <..key % str(x).split('__')[0]>
        type: Quality_Wsp
        name: '<.variant>__<.tag>'
        path: '<main.path>/<.name>'
        input: '<.path>.join_upstream'
        output: '<.path>.output'
        #
        attributes:
            x: =<option.position.x_start>+<option.size.w_s>*<..index_x>
            y: =<option.position.y_start>
        #
        parameters:
            parameters/scheme: 'medium'
        #
        force_connections:
            - '{upstream_merge}.out'
            - '<.input>'
            #
            - '<.output>'
            - '{variant_register}.<.variant>'
    #
    high__quality:
        index_x: 4
        tag: 'QLT'
        variant:
            |-
            <..key % str(x).split('__')[0]>
        type: Quality_Wsp
        name: '<.variant>__<.tag>'
        path: '<main.path>/<.name>'
        input: '<.path>.join_upstream'
        output: '<.path>.output'
        #
        attributes:
            x: =<option.position.x_start>+<option.size.w_s>*<..index_x>
            y: =<option.position.y_start>
        #
        parameters:
            parameters/scheme: 'high'
        #
        force_connections:
            - '{upstream_merge}.out'
            - '<.input>'
            #
            - '<.output>'
            - '{variant_register}.<.variant>'